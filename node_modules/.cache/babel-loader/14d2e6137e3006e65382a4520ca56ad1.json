{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Layout/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck, listDecks } from '../utils/api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n\n  let {\n    decks,\n    setDecks\n  } = _ref;\n\n  function deleteHandler(deckId) {\n    deleteDeck(deckId);\n    setDecks(currentDecks => currentDecks.filter(deck => deck.id !== deckId));\n  }\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const decksData = await listDecks(abortController.signal);\n        setDecks(decksData);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    return () => abortController.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/decks/new\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-secondary\",\n        children: \"Create Deck +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), decks.map((deck, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}`,\n          className: \"btn btn-secondary\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deck.id}/study`,\n          className: \"btn btn-primary\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => deleteHandler(deck.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Layout/Home.js"],"names":["React","useEffect","Link","deleteDeck","listDecks","Home","decks","setDecks","deleteHandler","deckId","currentDecks","filter","deck","id","abortController","AbortController","loadDecks","decksData","signal","error","name","abort","map","index","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,oBAApC;;AAGA,eAAe,SAASC,IAAT,OAAiC;AAAA;;AAAA,MAAnB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAmB;;AAE/C,WAASC,aAAT,CAAuBC,MAAvB,EAA8B;AAC3BN,IAAAA,UAAU,CAACM,MAAD,CAAV;AACAF,IAAAA,QAAQ,CAAEG,YAAD,IACTA,YAAY,CAACC,MAAb,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAA1C,CADQ,CAAR;AAGF;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,mBAAeC,SAAf,GAA2B;AACzB,UAAG;AACD,cAAMC,SAAS,GAAG,MAAMb,SAAS,CAACU,eAAe,CAACI,MAAjB,CAAjC;AACAX,QAAAA,QAAQ,CAACU,SAAD,CAAR;AAED,OAJD,CAIC,OAAME,KAAN,EAAY;AACX,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAgC;AAC9B,gBAAMD,KAAN;AACD;AACF;AACF;;AACDH,IAAAA,SAAS;AACT,WAAO,MAAMF,eAAe,CAACO,KAAhB,EAAb;AACD,GAhBS,EAgBP,EAhBO,CAAT;AAmBC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAMGf,KAAK,CAACgB,GAAN,CAAU,CAACV,IAAD,EAAOW,KAAP,kBACT;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BX,IAAI,CAACQ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBACGR,IAAI,CAACY;AADR;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASZ,IAAI,CAACC,EAAG,EAA5B;AAA+B,UAAA,SAAS,EAAC,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASD,IAAI,CAACC,EAAG,QAA5B;AAAqC,UAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAML,aAAa,CAACI,IAAI,CAACC,EAAN,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtDuBR,I;;KAAAA,I","sourcesContent":["import React, {useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {deleteDeck, listDecks} from '../utils/api/index';\n\n\nexport default function Home({decks, setDecks}) {\n\n function deleteHandler(deckId){\n    deleteDeck(deckId)\n    setDecks((currentDecks) => \n    currentDecks.filter((deck) => deck.id !== deckId)\n    )\n }\n\n useEffect(() => {\n\n  const abortController = new AbortController();\n  async function loadDecks() {\n    try{\n      const decksData = await listDecks(abortController.signal)\n      setDecks(decksData);\n\n    }catch(error){\n      if (error.name !== \"AbortError\"){\n        throw error;\n      }\n    }\n  }\n  loadDecks();\n  return () => abortController.abort();\n}, []);\n\n\n  return (\n    <div>\n      <Link to=\"/decks/new\">\n        <button type=\"button\" class=\"btn btn-secondary\">\n          Create Deck +\n        </button>\n      </Link>\n      {decks.map((deck, index) => (\n        <div className=\"card w-75 mx-auto\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{deck.name}</h5>\n            <p className=\"card-text\">\n              {deck.description}\n            </p>\n            <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary\">\n              View\n            </Link>\n            <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">\n              Study\n            </Link>\n            <button className=\"btn btn-danger\" onClick={() => deleteHandler(deck.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}