{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Studying/Study.js\",\n    _s = $RefreshSig$();\n\nimport Nav from \"./Nav\";\nimport NotEnough from \"./NotEnough\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Study(_ref) {\n  _s();\n\n  var _deck$cards$currentIn;\n\n  let {\n    decks\n  } = _ref;\n  let history = useHistory();\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\"\n  };\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [card, setCard] = useState(initializedStateCard);\n  const [front, setFront] = useState(\"front\");\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n    }\n\n    loadDeck();\n  }, [params.deckId]);\n\n  function flipHandler() {\n    if (front == \"front\") {\n      setFront(\"back\");\n    } else if (front == \"back\") {\n      setFront(\"front\");\n    }\n  } //added the setFront(\"front\");\n\n\n  function nextHandler() {\n    setCurrentIndex(currentIndex + 1);\n    setFront(\"front\");\n\n    if (currentIndex === deck.cards.length - 1) {\n      window.confirm(\"Restart cards?\") ? setCurrentIndex(0) : history.push(\"/\");\n    }\n  }\n\n  if (deck.cards.length < 3) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotEnough, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } // !! added the { front == \"back && \"}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      deck: deck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Study: \", deck.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Card \", currentIndex + 1, \" of \", deck.cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: (_deck$cards$currentIn = deck.cards[currentIndex]) === null || _deck$cards$currentIn === void 0 ? void 0 : _deck$cards$currentIn[front]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: flipHandler,\n          children: \"Flip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), front == \"back\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: nextHandler,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Study, \"d6r4UovUXCv4kYEG69/21vTGZis=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Studying/Study.js"],"names":["Nav","NotEnough","useParams","useHistory","useState","useEffect","readDeck","Study","decks","history","initializedState","id","name","description","cards","initializedStateCard","front","back","deckId","params","deck","setDeck","currentIndex","setCurrentIndex","card","setCard","setFront","loadDeck","deckFromAPI","flipHandler","nextHandler","length","window","confirm","push"],"mappings":"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","sourcesContent":["import Nav from \"./Nav\";\nimport NotEnough from \"./NotEnough\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api/index\";\n\nexport default function Study({ decks }) {\n  let history = useHistory();\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: [],\n  };\n\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\",\n  };\n\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [card, setCard] = useState(initializedStateCard);\n  const [front, setFront] = useState(\"front\");\n\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n    }\n    loadDeck();\n  }, [params.deckId]);\n\n  function flipHandler() {\n    if (front == \"front\") {\n      setFront(\"back\");\n    } else if (front == \"back\") {\n      setFront(\"front\");\n    }\n  }\n\n  //added the setFront(\"front\");\n  function nextHandler() {\n    setCurrentIndex(currentIndex + 1);\n    setFront(\"front\");\n    if (currentIndex === deck.cards.length - 1) {\n      window.confirm(\"Restart cards?\") ? setCurrentIndex(0) : history.push(\"/\");\n    }\n  }\n  if (deck.cards.length < 3) {\n    return (\n      <>\n        <Nav deck={deck} />\n        <h1>Study: {deck.name}</h1>\n        <NotEnough deck={deck} />\n      </>\n    );\n  }\n\n// !! added the { front == \"back && \"}\n\n  return (\n    <div>\n      <Nav deck={deck} />\n      <h1>Study: {deck.name}</h1>\n      <div className=\"card w-75\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            Card {currentIndex + 1} of {deck.cards.length}\n          </h5>\n          <p className=\"card-text\">{deck.cards[currentIndex]?.[front]}</p>\n          <button className=\"btn btn-secondary\" onClick={flipHandler}>\n            Flip\n          </button>\n          {front == \"back\" && \n          <button className=\"btn btn-primary\" onClick={nextHandler}>\n            Next\n          </button>\n          }\n        </div>\n      </div>\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}