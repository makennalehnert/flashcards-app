{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Content/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditDeck(_ref) {\n  _s();\n\n  let {\n    decks,\n    setDecks\n  } = _ref;\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\"\n  };\n  const [currentIndexDeck, setCurrentIndexDeck] = useState(0);\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  const history = useHistory();\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n      setCurrentIndexDeck(Object.values(params) - 1);\n    }\n\n    loadDeck();\n  }, [params.deckId]);\n\n  function handleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setDeck({});\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await updateDeck(deck);\n    setDecks([...decks, deck]);\n    history.push(`/decks/${decks.length + 1}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: \"Edit Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"exampleFormControlInput1\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            id: \"exampleFormControlInput1\",\n            placeholder: \"Deck Name\",\n            value: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"exampleFormControlTextarea1\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            name: \"description\",\n            id: \"exampleFormControlTextarea1\",\n            placeholder: \"Brief Description of the Deck\",\n            rows: \"3\",\n            value: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"cancel\",\n          className: \"btn btn-secondary\",\n          onClick: () => history.push(\"/\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Sumbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditDeck, \"Os25BMILQ1wmSJiSLVqIQAgdAyI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Content/EditDeck.js"],"names":["Link","useParams","useHistory","React","useState","useEffect","readDeck","updateDeck","EditDeck","decks","setDecks","initializedState","id","name","description","cards","initializedStateCard","front","back","deckId","currentIndexDeck","setCurrentIndexDeck","params","deck","setDeck","history","loadDeck","deckFromAPI","Object","values","handleChange","target","handleSubmit","event","preventDefault","push","length"],"mappings":"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","sourcesContent":["import { Link, useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck, updateDeck} from \"../utils/api/index\";\n\nexport default function EditDeck({ decks, setDecks }) {\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: [],\n  };\n\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\",\n  };\n\n  const [currentIndexDeck, setCurrentIndexDeck] = useState(0);\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n      setCurrentIndexDeck(Object.values(params) - 1);\n    }\n    loadDeck();\n  }, [params.deckId]);\n\n  function handleChange({target}){\n      setDeck({\n          \n      })\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await updateDeck(deck);\n    setDecks([...decks, deck])\n    history.push(`/decks/${decks.length + 1}`)\n  }\n\n  return (\n    <>\n      <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"breadcrumb-item\">{deck.name}</li>\n            <li className=\"breadcrumb-item\">Edit Deck</li>\n          </ol>\n        </nav>\n      </div>\n\n      <div>\n        <h1>Edit Deck</h1>\n        <form onSubmit={handleSubmit}>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlInput1\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"name\"\n              id=\"exampleFormControlInput1\"\n              placeholder=\"Deck Name\"\n              \n              value={deck.name}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\">Description</label>\n            <textarea\n              className=\"form-control\"\n              name=\"description\"\n              id=\"exampleFormControlTextarea1\"\n              placeholder=\"Brief Description of the Deck\"\n              rows=\"3\"\n              \n              value={deck.description}\n            ></textarea>\n          </div>\n          <button\n            type=\"cancel\"\n            className=\"btn btn-secondary\"\n            onClick={() => history.push(\"/\")}\n          >\n            Cancel\n          </button>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Sumbit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}