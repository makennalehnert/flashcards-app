{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Content/Deck.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck, deleteCard, deleteDeck } from \"../utils/api/index\"; // started working on deck, but need to add delete button functionality\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Deck(_ref) {\n  _s();\n\n  let {\n    decks,\n    setDecks\n  } = _ref;\n  const history = useHistory();\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\"\n  };\n  const [currentIndexDeck, setCurrentIndexDeck] = useState(0);\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  const [card, setCard] = useState(initializedStateCard);\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n      setCard(deckFromAPI.cards);\n      setCurrentIndexDeck(Object.values(params) - 1);\n    }\n\n    loadDeck();\n  }, [params.deckId]);\n\n  async function deleteCardHandler(cardId) {\n    await deleteCard(cardId);\n    const newCards = deck.cards.filter(card => card.id !== cardId);\n    setDeck({ ...deck,\n      cards: newCards\n    });\n  }\n\n  async function deleteDeckHandler(deckId) {\n    await deleteDeck(deckId);\n    setDecks(currentDecks => currentDecks.filter(deck => deck.id !== deckId));\n  } //edit link not working and neither is delete button\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deck.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/edit`,\n        class: \"btn btn-secondary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/study`,\n        class: \"btn btn-primary\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/cards/new`,\n        class: \"btn btn-primary\",\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"delete\",\n        class: \"btn btn-danger\",\n        onClick: () => deleteDeckHandler(deck.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), deck.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: card.front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: card.back\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/cards/${card.id}/edit`,\n            className: \"btn btn-secondary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"delete\",\n            className: \"btn btn-danger\",\n            onClick: () => deleteCardHandler(card.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deck, \"2bVRy78eSTSsGA39ccxRS9Xq6yU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Content/Deck.js"],"names":["Link","useParams","useHistory","React","useState","useEffect","readDeck","deleteCard","deleteDeck","Deck","decks","setDecks","history","initializedState","id","name","description","cards","initializedStateCard","front","back","deckId","currentIndexDeck","setCurrentIndexDeck","params","deck","setDeck","card","setCard","loadDeck","deckFromAPI","Object","values","deleteCardHandler","cardId","newCards","filter","deleteDeckHandler","currentDecks","map","index"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,EAAyBC,UAAzB,QAA2C,kBAA3C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,oBAAjD,C,CAEA;;;AAEA,eAAe,SAASC,IAAT,OAAmC;AAAA;;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AAC9C,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACF,QAAMW,gBAAgB,GAAG;AACvBC,IAAAA,EAAE,EAAE,EADmB;AAEvBC,IAAAA,IAAI,EAAE,EAFiB;AAGvBC,IAAAA,WAAW,EAAE,EAHU;AAIvBC,IAAAA,KAAK,EAAE;AAJgB,GAAzB;AAOA,QAAMC,oBAAoB,GAAG;AAC3BJ,IAAAA,EAAE,EAAE,EADuB;AAE3BK,IAAAA,KAAK,EAAE,EAFoB;AAG3BC,IAAAA,IAAI,EAAE,EAHqB;AAI3BC,IAAAA,MAAM,EAAE;AAJmB,GAA7B;AAOA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAMoB,MAAM,GAAGvB,SAAS,EAAxB;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAACS,gBAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAACc,oBAAD,CAAhC;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewB,QAAf,GAA0B;AACxB,YAAMC,WAAW,GAAG,MAAMxB,QAAQ,CAACkB,MAAM,CAACH,MAAR,CAAlC;AACAK,MAAAA,OAAO,CAACI,WAAD,CAAP;AACAF,MAAAA,OAAO,CAACE,WAAW,CAACb,KAAb,CAAP;AACAM,MAAAA,mBAAmB,CAACQ,MAAM,CAACC,MAAP,CAAcR,MAAd,IAAwB,CAAzB,CAAnB;AACD;;AACDK,IAAAA,QAAQ;AACT,GARQ,EAQN,CAACL,MAAM,CAACH,MAAR,CARM,CAAT;;AAUA,iBAAeY,iBAAf,CAAiCC,MAAjC,EAAwC;AACvC,UAAM3B,UAAU,CAAC2B,MAAD,CAAhB;AACA,UAAMC,QAAQ,GAAIV,IAAI,CAACR,KAAL,CAAWmB,MAAX,CAAmBT,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYoB,MAAxC,CAAlB;AACCR,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUR,MAAAA,KAAK,EAAEkB;AAAjB,KAAD,CAAP;AACF;;AAED,iBAAeE,iBAAf,CAAiChB,MAAjC,EAAwC;AACtC,UAAMb,UAAU,CAACa,MAAD,CAAhB;AACCV,IAAAA,QAAQ,CAAE2B,YAAD,IACTA,YAAY,CAACF,MAAb,CAAqBX,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYO,MAA1C,CADQ,CAAR;AAGF,GA3CgD,CA4ChD;;;AAEA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAK,sBAAW,YAAhB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,sBAAiCI,IAAI,CAACV;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,8BACE;AAAA,kBAAKU,IAAI,CAACV;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIU,IAAI,CAACT;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASS,IAAI,CAACX,EAAG,OAA5B;AAAoC,QAAA,KAAK,EAAC,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASW,IAAI,CAACX,EAAG,QAA5B;AAAqC,QAAA,KAAK,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASW,IAAI,CAACX,EAAG,YAA5B;AAAyC,QAAA,KAAK,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,gBAA5B;AAA6C,QAAA,OAAO,EAAE,MAAMuB,iBAAiB,CAACZ,IAAI,CAACX,EAAN,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,EAgBGW,IAAI,CAACR,KAAL,CAAWsB,GAAX,CAAe,CAACZ,IAAD,EAAOa,KAAP,kBACd;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0Bb,IAAI,CAACR;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BQ,IAAI,CAACP;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD;AACC,YAAA,EAAE,EAAG,UAASK,IAAI,CAACX,EAAG,UAASa,IAAI,CAACb,EAAG,OADxC;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eASE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,gBAAhC;AAAiD,YAAA,OAAO,EAAE,MAAMmB,iBAAiB,CAACN,IAAI,CAACb,EAAN,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,CAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GA/FuBL,I;UACJP,U,EAgBHD,S;;;KAjBOQ,I","sourcesContent":["import { Link, useParams,useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck, deleteCard, deleteDeck } from \"../utils/api/index\";\n\n// started working on deck, but need to add delete button functionality\n\nexport default function Deck({ decks, setDecks }) {\n    const history = useHistory()\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: [],\n  };\n\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\",\n  };\n\n  const [currentIndexDeck, setCurrentIndexDeck] = useState(0);\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  const [card, setCard] = useState(initializedStateCard);\n\n  \n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n      setCard(deckFromAPI.cards);\n      setCurrentIndexDeck(Object.values(params) - 1);\n    }\n    loadDeck();\n  }, [params.deckId]);\n\n  async function deleteCardHandler(cardId){\n   await deleteCard(cardId)\n   const newCards =  deck.cards.filter((card) => card.id !== cardId)\n    setDeck({...deck, cards: newCards})\n }\n\n async function deleteDeckHandler(deckId){\n   await deleteDeck(deckId)\n    setDecks((currentDecks) => \n    currentDecks.filter((deck) => deck.id !== deckId)\n    )\n }\n  //edit link not working and neither is delete button\n\n  return (\n    <div>\n      <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"breadcrumb-item\">{deck.name}</li>\n          </ol>\n        </nav>\n      </div>\n\n      <div>\n        <h3>{deck.name}</h3>\n        <p>{deck.description}</p>\n        <Link to={`/decks/${deck.id}/edit`} class=\"btn btn-secondary\">\n          Edit\n        </Link>\n        <Link to={`/decks/${deck.id}/study`} class=\"btn btn-primary\">\n          Study\n        </Link>\n        <Link to={`/decks/${deck.id}/cards/new`} class=\"btn btn-primary\">\n          Add Cards\n        </Link>\n        <button type=\"delete\" class=\"btn btn-danger\" onClick={() => deleteDeckHandler(deck.id)}>\n          Delete\n        </button>\n        <h2>Cards</h2>\n        {deck.cards.map((card, index) => (\n          <div class=\"card\">\n            <div className=\"card-body\">\n              <p className=\"card-text\">{card.front}</p>\n              <p className=\"card-text\">{card.back}</p>\n              <Link\n               to={`/decks/${deck.id}/cards/${card.id}/edit`}\n                className=\"btn btn-secondary\"\n              >\n                Edit\n              </Link>\n              <button type=\"delete\" className=\"btn btn-danger\" onClick={() => deleteCardHandler(card.id)}>\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}