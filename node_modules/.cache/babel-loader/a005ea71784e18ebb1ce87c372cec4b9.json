{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Content/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditDeck(_ref) {\n  _s();\n\n  let {\n    decks,\n    setDecks\n  } = _ref;\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  let history = useHistory();\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n    }\n\n    ;\n    loadDeck();\n  }, [params.deckId]);\n\n  function handleChange(_ref2) {\n    let {\n      target\n    } = _ref2;\n    setDeck({ ...deck,\n      [target.name]: target.value\n    });\n  }\n\n  ;\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await updateDeck(deck);\n    history.push(`/decks/${deck.id}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: deck.name,\n            onChange: handleChange,\n            value: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"description\",\n            placeholder: \"Brief Description of the Deck\",\n            rows: \"3\",\n            name: \"description\",\n            onChange: handleChange,\n            value: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"cancel\",\n          className: \"btn btn-secondary\",\n          onClick: () => history.push(\"/\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditDeck, \"D//zqduM/MY65jkUnaKHoRkQlQE=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Content/EditDeck.js"],"names":["Link","useParams","useHistory","React","useState","useEffect","readDeck","updateDeck","EditDeck","decks","setDecks","initializedState","id","name","description","cards","params","deck","setDeck","history","loadDeck","deckFromAPI","deckId","handleChange","target","value","handleSubmit","event","preventDefault","push"],"mappings":"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","sourcesContent":["import { Link, useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\n\n\nexport default function EditDeck({ decks, setDecks }) {\n    const initializedState = {\n        id: \"\",\n        name: \"\",\n        description: \"\",\n        cards: [],\n      };\n\n    \n      const params = useParams();\n      const [deck, setDeck] = useState(initializedState);\n      let history = useHistory()\n    \n      \n      useEffect(() => {\n        async function loadDeck() {\n          const deckFromAPI = await readDeck(params.deckId);\n          setDeck(deckFromAPI);\n        };\n        loadDeck();\n      }, [params.deckId]);\n\n      function handleChange({target}){\n        setDeck({\n          ...deck,\n          [target.name]: target.value,\n        });\n      };\n    \n      async function handleSubmit(event) {\n        event.preventDefault()\n        await updateDeck(deck);\n        history.push(`/decks/${deck.id}`)\n      }\n\n  return (\n      <>\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">{deck.name}</li>\n        </ol>\n      </nav>\n    </div>\n\n<div>\n<h1>Edit Deck</h1>\n<form onSubmit={handleSubmit}>\n  <div className=\"form-group\">\n    <label htmlFor=\"name\">Name</label>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      id=\"name\"\n      name=\"name\"\n      placeholder={deck.name}\n      onChange={handleChange}\n      value={deck.name}\n    />\n  </div>\n  <div className=\"form-group\">\n    <label htmlFor=\"description\">Description</label>\n    <textarea\n      className=\"form-control\"\n      id=\"description\"\n      placeholder=\"Brief Description of the Deck\"\n      rows=\"3\"\n      name=\"description\"\n      onChange={handleChange}\n      value={deck.description}\n    ></textarea>\n  </div>\n  <button\n    type=\"cancel\"\n    className=\"btn btn-secondary\"\n    onClick={() => history.push(\"/\")}\n  >\n    Cancel\n  </button>\n <button type=\"submit\" className=\"btn btn-primary\">\n    Submit\n  </button>\n</form>\n\n</div>\n\n\n\n</>\n  );\n}"]},"metadata":{},"sourceType":"module"}