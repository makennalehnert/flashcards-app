{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Content/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditDeck(_ref) {\n  _s();\n\n  let {\n    decks,\n    setDecks\n  } = _ref;\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const initializedStateCard = {\n    id: \"\",\n    front: \"\",\n    back: \"\",\n    deckId: \"\"\n  };\n  const [currentIndexDeck, setCurrentIndexDeck] = useState(0);\n  const params = useParams();\n  const [deck, setDeck] = useState(initializedState);\n  const [card, setCard] = useState(initializedStateCard);\n  const history = useHistory();\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n      setCard(deckFromAPI.cards);\n      setCurrentIndexDeck(Object.values(params) - 1);\n    }\n\n    loadDeck();\n  }, [params.deckId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"HdMflfc9YUVe2WMTBhtd5GDb1+g=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Content/EditDeck.js"],"names":["Link","useParams","useHistory","React","useState","useEffect","readDeck","EditDeck","decks","setDecks","initializedState","id","name","description","cards","initializedStateCard","front","back","deckId","currentIndexDeck","setCurrentIndexDeck","params","deck","setDeck","card","setCard","history","loadDeck","deckFromAPI","Object","values"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,EAAyBC,UAAzB,QAA2C,kBAA3C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAGA,eAAe,SAASC,QAAT,OAAoC;AAAA;;AAAA,MAAlB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAkB;AAE/C,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,EAAE,EAAE,EADiB;AAErBC,IAAAA,IAAI,EAAE,EAFe;AAGrBC,IAAAA,WAAW,EAAE,EAHQ;AAIrBC,IAAAA,KAAK,EAAE;AAJc,GAAzB;AAOE,QAAMC,oBAAoB,GAAG;AAC3BJ,IAAAA,EAAE,EAAE,EADuB;AAE3BK,IAAAA,KAAK,EAAE,EAFoB;AAG3BC,IAAAA,IAAI,EAAE,EAHqB;AAI3BC,IAAAA,MAAM,EAAE;AAJmB,GAA7B;AAOA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAMiB,MAAM,GAAGpB,SAAS,EAAxB;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACM,gBAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAACW,oBAAD,CAAhC;AACA,QAAMW,OAAO,GAAGxB,UAAU,EAA1B;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAesB,QAAf,GAA0B;AACxB,YAAMC,WAAW,GAAG,MAAMtB,QAAQ,CAACe,MAAM,CAACH,MAAR,CAAlC;AACAK,MAAAA,OAAO,CAACK,WAAD,CAAP;AACAH,MAAAA,OAAO,CAACG,WAAW,CAACd,KAAb,CAAP;AACAM,MAAAA,mBAAmB,CAACS,MAAM,CAACC,MAAP,CAAcT,MAAd,IAAwB,CAAzB,CAAnB;AACD;;AACDM,IAAAA,QAAQ;AACT,GARQ,EAQN,CAACN,MAAM,CAACH,MAAR,CARM,CAAT;AAWF,sBACI;AAAA,2BACA;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCI,IAAI,CAACV;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA9CuBL,Q;UAiBHN,S,EAGCC,U;;;KApBEK,Q","sourcesContent":["import { Link, useParams,useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../utils/api/index\";\n\n\nexport default function EditDeck({decks, setDecks}){\n    \n    const initializedState = {\n        id: \"\",\n        name: \"\",\n        description: \"\",\n        cards: [],\n      };\n    \n      const initializedStateCard = {\n        id: \"\",\n        front: \"\",\n        back: \"\",\n        deckId: \"\",\n      };\n    \n      const [currentIndexDeck, setCurrentIndexDeck] = useState(0);\n      const params = useParams();\n      const [deck, setDeck] = useState(initializedState);\n      const [card, setCard] = useState(initializedStateCard);\n      const history = useHistory();\n      \n      useEffect(() => {\n        async function loadDeck() {\n          const deckFromAPI = await readDeck(params.deckId);\n          setDeck(deckFromAPI);\n          setCard(deckFromAPI.cards);\n          setCurrentIndexDeck(Object.values(params) - 1);\n        }\n        loadDeck();\n      }, [params.deckId]);\n        \n    \n    return (\n        <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"breadcrumb-item\">{deck.name}</li>\n            \n          </ol>\n        </nav>\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}