{"ast":null,"code":"var _jsxFileName = \"/Users/makennalehnert/Thinkful/flashcard-app/src/Content/Deck.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Deck(_ref) {\n  _s();\n\n  let {\n    decks\n  } = _ref;\n  let history = useHistory();\n  const initializedState = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const [deck, setDeck] = useState(initializedState);\n  useEffect(() => {\n    async function loadDeck() {\n      const deckFromAPI = await readDeck(params.deckId);\n      setDeck(deckFromAPI);\n    }\n\n    loadDeck();\n  }, [params.deckId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deck, \"4ap8KzBGQfNcm5g+v79nOkjwFUY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/makennalehnert/Thinkful/flashcard-app/src/Content/Deck.js"],"names":["Link","useHistory","useState","useEffect","Deck","decks","history","initializedState","id","name","description","cards","deck","setDeck","loadDeck","deckFromAPI","readDeck","params","deckId"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AACA,eAAe,SAASC,IAAT,OAAuB;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAElC,MAAIC,OAAO,GAAGL,UAAU,EAAxB;AACA,QAAMM,gBAAgB,GAAG;AACvBC,IAAAA,EAAE,EAAE,EADmB;AAEvBC,IAAAA,IAAI,EAAE,EAFiB;AAGvBC,IAAAA,WAAW,EAAE,EAHU;AAIvBC,IAAAA,KAAK,EAAE;AAJgB,GAAzB;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACK,gBAAD,CAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeW,QAAf,GAA0B;AACxB,YAAMC,WAAW,GAAG,MAAMC,QAAQ,CAACC,MAAM,CAACC,MAAR,CAAlC;AACAL,MAAAA,OAAO,CAACE,WAAD,CAAP;AACD;;AACDD,IAAAA,QAAQ;AACT,GANM,EAMJ,CAACG,MAAM,CAACC,MAAR,CANI,CAAT;AAQF,sBACE;AAAA,2BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCN,IAAI,CAACH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhCuBL,I;UAENH,U;;;KAFMG,I","sourcesContent":["import {Link, useHistory} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nexport default function Deck({decks}) {\n\n    let history = useHistory();\n    const initializedState = {\n      id: \"\",\n      name: \"\",\n      description: \"\",\n      cards: [],\n    };\n\n    const [deck, setDeck] = useState(initializedState);\n\n    useEffect(() => {\n        async function loadDeck() {\n          const deckFromAPI = await readDeck(params.deckId);\n          setDeck(deckFromAPI);\n        }\n        loadDeck();\n      }, [params.deckId]);\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">{deck.name}</li>\n        </ol>\n      </nav>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}